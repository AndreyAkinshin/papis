#! /usr/bin/env python3
# -*- coding: utf-8 -*-
# Last modified: 11-13-2018
import sys, os
import papis.api
import papis.commands
import papis.crossref
import papis.document

def usage():
    print("Usage: papis tags <papis-search>")

def print_no_tags_and_exit():
    print('The library does not have any tags set')
    sys.exit(1)


if len(sys.argv) < 2:
    search = ""
else:
    search = sys.argv[1]
    if search in ['-h', '--help']:
        usage()
        sys.exit(0)

documents = papis.api.get_documents_in_lib(
    papis.api.get_lib(),
    search=search
)

# Create an empty tag list
tag_list = []
for item in documents:
    if 'tags' in item.keys():
        for tag in list([item['tags']]):
            # if tag contains a comma, split it to a list
            if tag.split(','):
                tag = tag.split(',')
            else:
                continue
            tag_list.append(tag)

# if no tags are found, exit gracefully
if tag_list == []:
    print_no_tags_and_exit()
            
# flatten the list, which may be a list of lists
# also make it lower case and strip out any preceding spaces. The list
# set, is then sorted to alphanumeric order.
flat_list = sorted(set([y.strip(' ').lower() for x in tag_list for y in x]))

# Allow the list set (no duplicates) )to be sorted into alphabetical
# order and picked from
picked_tag = papis.api.pick(
    flat_list
)

docs = papis.api.get_documents_in_lib(
    papis.api.get_lib(),
    search='tags={0}'.format(picked_tag)
)

doc_to_open = papis.api.pick_doc(
    docs
)

files = doc_to_open.get_files()

if len(files) == 0:
    logger.error("The document chosen has no files attached")

file_to_open = papis.api.pick(
    files,
)
papis.api.open_file(file_to_open, wait=False)
